---
import { getEntry, type CollectionEntry } from 'astro:content';
import BlogPostLayout from '../../layouts/BlogPostLayout.astro';

export type BlogEntry = CollectionEntry<'blog'>;
// type BlogData = BlogEntry['data']; // Unused

// 在服务器模式下，我们不使用getStaticPaths
// 而是在每个请求中直接获取内容
const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/blog');
}

// 尝试获取文章
let entry;
try {
  entry = await getEntry('blog', slug);
  
  if (!entry) {
    return Astro.redirect('/404');
  }
} catch (error) {
  console.error('无法获取博客文章:', error);
  return Astro.redirect('/404');
}

// 渲染内容
let Content;
try {
  const rendered = await entry.render();
  Content = rendered.Content;
} catch (error) {
  console.error('渲染博客文章时出错:', error);
  return Astro.redirect('/500');
}

// 格式化日期
const formattedDate = new Date(entry.data.date).toLocaleDateString('zh-CN', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// 设置预渲染为false
export const prerender = false;
---

<BlogPostLayout title={entry.data.title}>
  <article class="max-w-3xl mx-auto">
    <div class="mb-8">
      <h1 class="text-3xl md:text-4xl font-bold mb-2">{entry.data.title}</h1>
      {entry.data.description && (
        <p class="text-gray-600 mb-4">{entry.data.description}</p>
      )}
      <div class="flex flex-wrap items-center text-sm text-gray-500">
        <time datetime={entry.data.date.toISOString()}>{formattedDate}</time>
        {entry.data.category && (
          <span class="mx-2">|</span>
          <a href={`/category/${entry.data.category.toLowerCase()}`} class="text-blue-600 hover:underline">
            {entry.data.category}
          </a>
        )}
      </div>
      {entry.data.tags && entry.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mt-3">
          {entry.data.tags.map((tag: string) => (
            <a 
              href={`/tag/${tag.toLowerCase()}`}
              class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded hover:bg-blue-200"
            >
              {tag}
            </a>
          ))}
        </div>
      )}
    </div>

    <div class="prose prose-lg max-w-none">
      <Content />
    </div>
  </article>
</BlogPostLayout>

<style is:global>
  /* KaTeX 样式已通过 global.css 引入 */
  
  /* 文章内容样式 */
  .prose h1 {
    @apply text-3xl font-bold mb-4 mt-8;
  }
  .prose h2 {
    @apply text-2xl font-bold mb-4 mt-6;
  }
  .prose h3 {
    @apply text-xl font-semibold mb-3 mt-5;
  }
  .prose p {
    @apply mb-4;
  }
  .prose ul {
    @apply list-disc pl-5 mb-4;
  }
  .prose ol {
    @apply list-decimal pl-5 mb-4;
  }
  .prose li {
    @apply mb-1;
  }
  .prose a {
    @apply text-blue-600 hover:underline;
  }
  .prose blockquote {
    @apply border-l-4 border-gray-300 pl-4 italic;
  }
  .prose code:not([class*="language-"]) {
    @apply bg-gray-100 px-1 py-0.5 rounded text-sm;
  }
  .prose pre {
    @apply bg-gray-800 text-white p-4 rounded-md overflow-x-auto;
  }
  

</style>