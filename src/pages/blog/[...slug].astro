---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

// 定义博客条目的类型
type BlogEntry = CollectionEntry<'blog'>;
type BlogData = BlogEntry['data'];

// 获取文章集合并排除草稿
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog', ({ data }: BlogEntry) => {
    return import.meta.env.PROD ? !data.draft : true;
  });
  
  return blogEntries.map((entry: BlogEntry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props as { entry: BlogEntry };
const { Content } = await entry.render();

// 格式化日期
const formattedDate = new Date(entry.data.date).toLocaleDateString('zh-CN', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={entry.data.title}>
  <article class="max-w-3xl mx-auto">
    <div class="mb-8">
      <h1 class="text-3xl md:text-4xl font-bold mb-2">{entry.data.title}</h1>
      {entry.data.description && (
        <p class="text-gray-600 mb-4">{entry.data.description}</p>
      )}
      <div class="flex flex-wrap items-center text-sm text-gray-500">
        <time datetime={entry.data.date.toISOString()}>{formattedDate}</time>
        {entry.data.category && (
          <span class="mx-2">|</span>
          <a href={`/category/${entry.data.category.toLowerCase()}`} class="text-blue-600 hover:underline">
            {entry.data.category}
          </a>
        )}
      </div>
      {entry.data.tags && entry.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mt-3">
          {entry.data.tags.map((tag: string) => (
            <a 
              href={`/tag/${tag.toLowerCase()}`}
              class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded hover:bg-blue-200"
            >
              {tag}
            </a>
          ))}
        </div>
      )}
    </div>

    <div class="prose prose-lg max-w-none">
      <Content />
    </div>
  </article>
</Layout>

<style is:global>
  /* KaTeX 样式已通过 global.css 引入 */
  
  /* 文章内容样式 */
  .prose h1 {
    @apply text-3xl font-bold mb-4 mt-8;
  }
  .prose h2 {
    @apply text-2xl font-bold mb-4 mt-6;
  }
  .prose h3 {
    @apply text-xl font-semibold mb-3 mt-5;
  }
  .prose p {
    @apply mb-4;
  }
  .prose ul {
    @apply list-disc pl-5 mb-4;
  }
  .prose ol {
    @apply list-decimal pl-5 mb-4;
  }
  .prose li {
    @apply mb-1;
  }
  .prose a {
    @apply text-blue-600 hover:underline;
  }
  .prose blockquote {
    @apply border-l-4 border-gray-300 pl-4 italic;
  }
  .prose code:not([class*="language-"]) {
    @apply bg-gray-100 px-1 py-0.5 rounded text-sm;
  }
  .prose pre {
    @apply bg-gray-800 text-white p-4 rounded-md overflow-x-auto;
  }
  
  /* KaTeX 公式样式增强 */
  .katex-display {
    @apply my-4 overflow-x-auto overflow-y-hidden;
    padding: 0.5rem 0;
  }
  
  .katex {
    @apply text-lg;
    font-size: 1.1em;
  }
  
  /* 解决矩阵公式溢出问题 */
  .katex-display > .katex {
    @apply max-w-full;
    overflow-x: auto;
    overflow-y: hidden;
  }
  
  /* 确保矩阵能够正确显示 */
  .katex .mathnormal {
    font-family: KaTeX_Math;
    font-style: italic;
  }
  
  /* 增加对表格和矩阵的支持 */
  .katex .array-col-align-c > .col-align-c {
    text-align: center;
  }
  
  .katex .array-col-align-l > .col-align-l {
    text-align: left;
  }
  
  .katex .array-col-align-r > .col-align-r {
    text-align: right;
  }
</style>