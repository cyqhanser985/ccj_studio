---
import '../styles/global.css';
import Search from '../components/Search.astro';
const { title } = Astro.props;

// 活动页面路径
const currentPath = Astro.url.pathname;
---
<!doctype html>
<html lang="zh-CN" class="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="林大反卷门驻地 - 一个专注于知识分享、技术探讨和个人成长的空间站" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <!-- KaTeX CSS - 确保完整的样式支持 -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css" integrity="sha384-GvrOXuhMATgEsSwCs4smul74iXGOixntILdUW9XmUC6+HX0sLNAK3q71HotJqlAn" crossorigin="anonymous">
    <title>{title ? `${title} - 林大反卷门驻地` : '林大反卷门驻地'}</title>
  </head>
  <body class="bg-gray-50 text-gray-900 dark:bg-gray-900 dark:text-gray-100 flex flex-col min-h-screen transition-colors duration-200">
    <header class="bg-blue-600 text-white dark:bg-blue-800 shadow-md">
      <div class="container mx-auto p-4">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <div class="flex items-center mb-4 md:mb-0">
            <a href="/" class="text-2xl font-bold">林大反卷门驻地</a>
          </div>
          <div class="flex items-center">
            <!-- 搜索组件 -->
            <div class="mr-4 w-full md:w-64 lg:w-80">
              <Search client:idle />
            </div>
            
            <!-- 桌面端导航 -->
            <nav class="mr-4 hidden md:flex items-center">
              <!-- 主导航项 -->
              <a 
                href="/" 
                class={`px-3 py-2 rounded-md mr-2 hover:bg-blue-500 transition-colors ${currentPath === '/' ? 'bg-blue-700' : ''}`}
              >
                首页
              </a>
              
              <!-- 内容下拉菜单 -->
              <div class="relative group mr-2">
                <button class="flex items-center px-3 py-2 rounded-md hover:bg-blue-500 transition-colors">
                  <span>内容</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </button>
                <div id="content-dropdown" class="absolute left-0 mt-2 w-48 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 z-10 hidden">
                  <div class="py-1">
                    <a 
                      href="/blog" 
                      class={`block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 ${currentPath === '/blog' || currentPath.startsWith('/blog/') ? 'bg-gray-100 dark:bg-gray-700' : ''}`}
                    >
                      博客文章
                    </a>
                    <a 
                      href="/notes" 
                      class={`block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 ${currentPath === '/notes' || currentPath.startsWith('/notes/') ? 'bg-gray-100 dark:bg-gray-700' : ''}`}
                    >
                      学习笔记
                    </a>
                    <a 
                      href="/tags" 
                      class={`block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700 ${currentPath === '/tags' ? 'bg-gray-100 dark:bg-gray-700' : ''}`}
                    >
                      标签云
                    </a>
                  </div>
                </div>
              </div>
              
              <!-- 关于链接 -->
              <a 
                href="/about" 
                class={`px-3 py-2 rounded-md hover:bg-blue-500 transition-colors ${currentPath === '/about' ? 'bg-blue-700' : ''}`}
              >
                关于
              </a>
              
              <!-- 开发者模式只在激活后显示 -->
              <div id="dev-menu-items" class="hidden">
                <a 
                  href="/create" 
                  class="ml-2 px-3 py-2 bg-green-600 hover:bg-green-700 rounded-md text-white transition-colors"
                >
                  创建内容
                </a>
              </div>
            </nav>
            
            <!-- 移动端菜单按钮 -->
            <button id="mobile-menu-toggle" class="md:hidden p-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 mr-2">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
            
            <!-- 暗黑模式切换按钮 -->
            <button id="theme-toggle" class="rounded-full p-2 bg-blue-500 dark:bg-blue-700 hover:bg-blue-400 dark:hover:bg-blue-600">
              <svg xmlns="http://www.w3.org/2000/svg" id="sun-icon" class="h-5 w-5 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
              </svg>
              <svg xmlns="http://www.w3.org/2000/svg" id="moon-icon" class="h-5 w-5 block dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
              </svg>
            </button>
          </div>
        </div>
        
        <!-- 移动端菜单内容 -->
        <div id="mobile-menu" class="mt-4 hidden md:hidden">
          <nav class="flex flex-col space-y-2">
            <a 
              href="/" 
              class={`block py-2 px-4 rounded-md hover:bg-blue-700 ${currentPath === '/' ? 'font-bold bg-blue-700' : ''}`}
            >
              首页
            </a>
            <a 
              href="/blog" 
              class={`block py-2 px-4 rounded-md hover:bg-blue-700 ${currentPath === '/blog' || currentPath.startsWith('/blog/') ? 'font-bold bg-blue-700' : ''}`}
            >
              博客文章
            </a>
            <a 
              href="/notes" 
              class={`block py-2 px-4 rounded-md hover:bg-blue-700 ${currentPath === '/notes' || currentPath.startsWith('/notes/') ? 'font-bold bg-blue-700' : ''}`}
            >
              学习笔记
            </a>
            <a 
              href="/tags" 
              class={`block py-2 px-4 rounded-md hover:bg-blue-700 ${currentPath === '/tags' ? 'font-bold bg-blue-700' : ''}`}
            >
              标签云
            </a>
            <a 
              href="/about" 
              class={`block py-2 px-4 rounded-md hover:bg-blue-700 ${currentPath === '/about' ? 'font-bold bg-blue-700' : ''}`}
            >
              关于
            </a>
            
            <!-- 开发者模式移动端选项，默认隐藏 -->
            <div id="mobile-dev-menu-items" class="hidden">
              <a 
                href="/create" 
                class="block py-2 px-4 mt-2 bg-green-600 hover:bg-green-700 rounded-md text-white"
              >
                创建内容
              </a>
            </div>
          </nav>
        </div>
      </div>
    </header>
    
    <!-- 开发者模式密码输入模态框 -->
    <div id="dev-modal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
      <div class="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-sm w-full">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-bold text-gray-900 dark:text-white">开发者模式验证</h2>
          <button id="close-dev-modal" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>
        <div class="mb-4">
          <label for="dev-password" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">请输入开发者密码</label>
          <input type="password" id="dev-password" class="w-full rounded-md border-gray-300 dark:border-gray-700 dark:bg-gray-900 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
        </div>
        <div class="flex justify-end">
          <button id="verify-dev-password" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            验证
          </button>
        </div>
      </div>
    </div>
    
    <main class="flex-grow container mx-auto p-6">
      <slot />
    </main>
    <footer class="bg-gray-800 text-white dark:bg-gray-950 p-6">
      <div class="container mx-auto">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <div class="mb-4 md:mb-0">
            <p>&copy; {new Date().getFullYear()} 林大反卷门驻地</p>
          </div>
          <div class="flex space-x-4">
            <a href="/about" class="hover:text-blue-300">关于</a>
            <a href="/blog" class="hover:text-blue-300">博客</a>
            <a href="/notes" class="hover:text-blue-300">笔记</a>
            <button id="exit-dev-mode" class="hover:text-blue-300 hidden">退出开发者模式</button>
          </div>
        </div>
      </div>
    </footer>
    
    <!-- KaTeX支持脚本 - 帮助处理复杂公式 -->
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.js" integrity="sha384-cpW21h6RZv/phavutF+AuVYrr+dA8xD9zs6FwLpaCct6O9ctzYFfFr4dgmgccOTx" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/contrib/auto-render.min.js" integrity="sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05" crossorigin="anonymous"
        onload="renderMathInElement(document.body);"></script>

    <!-- 暗黑模式切换脚本 - 立即加载，对用户体验影响大 -->
    <script>
      // 检查本地存储中的主题偏好
      const themeToggleBtn = document.getElementById('theme-toggle');
      const htmlElement = document.documentElement;
      
      // 检查用户之前的偏好
      if (localStorage.getItem('theme') === 'dark' || 
          (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        htmlElement.classList.add('dark');
      } else {
        htmlElement.classList.remove('dark');
      }
      
      // 添加切换事件
      if (themeToggleBtn) 
        themeToggleBtn.addEventListener('click', function() {
          if (htmlElement.classList.contains('dark')) {
            htmlElement.classList.remove('dark');
            localStorage.setItem('theme', 'light');
          } else {
          htmlElement.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        }
      });
    </script>
    
    <!-- 移动端菜单切换 - 立即加载，对移动用户体验影响大 -->
    <script>
      // 移动端菜单切换
      const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
      const mobileMenu = document.getElementById('mobile-menu');
      
      if (mobileMenuToggle && mobileMenu) {
        mobileMenuToggle.addEventListener('click', function() {
          mobileMenu.classList.toggle('hidden');
        });
      }
    </script>
    
    <!-- 开发者模式逻辑 - 延迟加载，对核心功能不重要 -->
    <script defer>
      // 开发者模式逻辑
      const devPassword = "Cyq20060804";
      const devModal = document.getElementById('dev-modal');
      const devPasswordInput = document.getElementById('dev-password');
      const verifyDevPasswordBtn = document.getElementById('verify-dev-password');
      const closeDevModalBtn = document.getElementById('close-dev-modal');
      const devMenuItems = document.getElementById('dev-menu-items');
      const mobileDevMenuItems = document.getElementById('mobile-dev-menu-items');
      const exitDevModeBtn = document.getElementById('exit-dev-mode');
      
      // 默认关闭开发者模式
      localStorage.removeItem('dev_mode_active');
      
      // 检查是否已激活开发者模式
      let isDevMode = localStorage.getItem('dev_mode_active') === 'true';
      if (isDevMode) {
        showDevModeItems();
      }
      
      // 监听快捷键
      document.addEventListener('keydown', function(e) {
        // 检测Ctrl+F1
        if (e.ctrlKey && e.key === 'F1') {
          e.preventDefault();
          showDevModal();
        }
      });
      
      // 显示开发者模式验证框
      function showDevModal() {
        if (devModal) {
          devModal.classList.remove('hidden');
          if (devPasswordInput) {
            devPasswordInput.value = '';
            devPasswordInput.focus();
          }
        }
      }
      
      // 显示开发者模式菜单项
      function showDevModeItems() {
        if (devMenuItems) devMenuItems.classList.remove('hidden');
        if (mobileDevMenuItems) mobileDevMenuItems.classList.remove('hidden');
        if (exitDevModeBtn) exitDevModeBtn.classList.remove('hidden');
      }
      
      // 隐藏开发者模式菜单项
      function hideDevModeItems() {
        if (devMenuItems) devMenuItems.classList.add('hidden');
        if (mobileDevMenuItems) mobileDevMenuItems.classList.add('hidden');
        if (exitDevModeBtn) exitDevModeBtn.classList.add('hidden');
      }
      
      // 验证开发者密码
      if (verifyDevPasswordBtn) {
        verifyDevPasswordBtn.addEventListener('click', verifyPassword);
      }
      
      if (devPasswordInput) {
        devPasswordInput.addEventListener('keydown', function(e) {
          if (e.key === 'Enter') {
            e.preventDefault();
            verifyPassword();
          }
        });
      }
      
      function verifyPassword() {
        if (devPasswordInput && devPasswordInput.value === devPassword) {
          isDevMode = true;
          localStorage.setItem('dev_mode_active', 'true');
          showDevModeItems();
          closeDevModal();
        } else {
          alert('密码错误，请重试！');
          if (devPasswordInput) devPasswordInput.value = '';
        }
      }
      
      // 退出开发者模式
      if (exitDevModeBtn) {
        exitDevModeBtn.addEventListener('click', function() {
          isDevMode = false;
          localStorage.removeItem('dev_mode_active');
          hideDevModeItems();
        });
      }
      
      // 关闭开发者模式验证框
      function closeDevModal() {
        if (devModal) {
          devModal.classList.add('hidden');
        }
      }
      
      if (closeDevModalBtn) {
        closeDevModalBtn.addEventListener('click', closeDevModal);
      }
      
      // 点击模态框外部关闭
      if (devModal) {
        devModal.addEventListener('click', function(e) {
          if (e.target === devModal) {
            closeDevModal();
          }
        });
      }
    </script>
      
    <!-- 下拉菜单改进 - 仅在视图可见时加载 -->
    <script defer>
      // 下拉菜单改进
      const contentDropdownParent = document.querySelector('.relative.group');
      const contentDropdown = document.getElementById('content-dropdown');
      let dropdownTimeout;
      
      if (contentDropdownParent && contentDropdown) {
        // 鼠标进入父元素时显示下拉菜单
        contentDropdownParent.addEventListener('mouseenter', function() {
          clearTimeout(dropdownTimeout);
          contentDropdown.classList.remove('hidden');
        });
        
        // 鼠标离开时延迟隐藏
        contentDropdownParent.addEventListener('mouseleave', function() {
          dropdownTimeout = setTimeout(() => {
            contentDropdown.classList.add('hidden');
          }, 500); // 延迟500毫秒
        });
        
        // 鼠标进入下拉菜单时清除隐藏定时器
        contentDropdown.addEventListener('mouseenter', function() {
          clearTimeout(dropdownTimeout);
        });
        
        // 鼠标离开下拉菜单时延迟隐藏
        contentDropdown.addEventListener('mouseleave', function() {
          dropdownTimeout = setTimeout(() => {
            contentDropdown.classList.add('hidden');
          }, 300); // 延迟300毫秒
        });
        
        // 为移动设备添加点击切换功能
        const dropdownButton = contentDropdownParent?.querySelector('button');
        if (dropdownButton && contentDropdown) {
          dropdownButton.addEventListener('click', function(e) {
            e.preventDefault();
            contentDropdown.classList.toggle('hidden');
          });
        }
      }
    </script>
  </body>
</html>